name: testsuite

on:
  push:
    branches:
      - "**"
    tags-ignore:
      - "*"
  pull_request:

jobs:
  cygwin:
    name: "cygwin"
    runs-on: windows-latest
    timeout-minutes: 120

    env:
      PERL_SKIP_TTY_TEST: 1
      CONTINUOUS_INTEGRATION: 1

    steps:
      - run: git config --global core.autocrlf false
      - name: Set up Cygwin
        shell: cmd
        run: |
          choco install cygwin --params="/InstallDir:%GITHUB_WORKSPACE%\cygwin"
          choco install cyg-get
          cyg-get cygwin-devel gcc-core gcc gcc-g++ make cygwin64-w32api-headers binutils libtool git ccache
      - name: Check out using Cygwin git, to ensure correct file permissions
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: cmd
        run: |
          path %GITHUB_WORKSPACE%\cygwin\bin;%GITHUB_WORKSPACE%\cygwin\usr\bin
          sh -c "mkdir -p ~; cd ~; echo \"$GITHUB_REPOSITORY\"; git clone -qn \"https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY\" work ; cd work ; if [ \"$GITHUB_EVENT_NAME\" = pull_request ] ; then git fetch origin \"$GITHUB_REF\" && git checkout FETCH_HEAD ; else  git checkout \"$GITHUB_SHA\" ; fi"
      - name: Configure
        shell: cmd
        run: |
          path %GITHUB_WORKSPACE%\cygwin\bin;%GITHUB_WORKSPACE%\cygwin\usr\bin
          sh -c "cd ~/work; ./Configure -des -Dusedevel -Doptimize=-g -DDEBUGGING"
      - name: Build
        shell: cmd
        run: |
          path %GITHUB_WORKSPACE%\cygwin\bin;%GITHUB_WORKSPACE%\cygwin\usr\bin
          sh -c "cd ~/work; make -j4"
      - name: Run Tests
        shell: cmd
        run: |
          path %GITHUB_WORKSPACE%\cygwin\bin;%GITHUB_WORKSPACE%\cygwin\usr\bin
          sh -c "cd ~/work; make -j4 test"
